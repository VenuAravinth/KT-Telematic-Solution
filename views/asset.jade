

link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.css')
link(rel='stylesheet' href='https://cdn.datatables.net/2.1.3/css/dataTables.bootstrap4.css')

script(src='https://code.jquery.com/jquery-3.7.1.js')
script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js')
script(src='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/js/bootstrap.min.js')
script(src='https://cdn.datatables.net/2.1.3/js/dataTables.js')
script(src='https://cdn.datatables.net/2.1.3/js/dataTables.bootstrap4.js')
script(src='https://kit.fontawesome.com/your-font-awesome-kit-id.js')
script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js')
link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css')
script.
    function handleSelect(event) {
    var selectedValue = event.target.value;
    const assetData =!{assetData};
    let filteredAsset = [];
    if(event.target.value != '0'){
    filteredAsset = assetData.filter(asset => asset.assetTypeId == selectedValue);
    var table = $('#myTable').DataTable();
        table.clear().draw();
        filteredAsset.map((ele)=>{
        table.row.add({
            "assetId": ele.assetId,
            "assetName": ele.assetName,
            "branchId": ele.branchId,
            "branchName": ele.branchName,
            "assetTypeId": ele.assetTypeId,
            "assetTypeName": ele.assetTypeName,
            "make": ele.make,
            "modal": ele.modal,
            "isInStock": ele.isInStock,
            "purchaseDate": ele.purchaseDate,                  
        }).draw();
        })
    }

    }
body

div 
include navbar

div.container-fluid
    div.row
        include sidebar
        div.col-md-10.main-content
            h3.mt-3.mb-5 Asset List
                div.form-group.col-3.mt-5
                    h6(for="category") Category :
                    select.form-control#catOption2.mt-2(onchange='handleSelect(event)')
            button(type="button" class="btn btn-primary float-right mr-3 mb-2 createBtn" data-toggle="modal") Add 
            table#myTable.table.table-striped.table-hover

//------- formData---->
div#addEmployeeModal.modal.fade(role='dialog')
    div.modal-dialog.modal-dialog-centered
        div.modal-content
            div.modal-header
                h4.modal-title #{modalTitle} Create Asset
                button.close(type='button' data-dismiss='modal' aria-label='Close')
                    span(aria-hidden='true') 
            div.modal-body
                form.row
                    div.form-group.col-12
                        label(for='assetName') Asset Name
                        input#assetName.form-control(type='text' placeholder='Enter Asset Name')
                    div.form-group.col-6
                        label(for="category") Category :
                        select.form-control#catOption
                    div.form-group.col-6
                        label(for="branch") Branch :
                        select.form-control#branchOption
                    div.form-group.col-6
                        label(for='makeName') Make
                        input#makeName.form-control(type='text' placeholder='Enter Make')
                    div.form-group.col-6
                        label(for='modalName') Modal
                        input#modalName.form-control(type='text' placeholder='Enter Modal')
                    div.form-group.col-6
                        label(for='purchaseDate') Purchase Date
                        input#purchaseDate.form-control(type='date' placeholder='DD/MM/YYYY')
                    div.form-group.col-6
                        label(for='purchaseValue') Purchase Value
                        input#purchaseValue.form-control(type='text' placeholder='Enter Purchase Value')
                    div.form-group.col-4
                        div.form-check
                            input#isInStock.form-check-input.mt-2(type='checkbox')
                            label.form-check-label(for='isInStock') In-Stock


            div.modal-footer
                button.btn.btn-default.btn-danger(type='button' data-dismiss='modal') Close
                button#submitForm.btn.btn-default.btn-primary.btn-save(type='button' data-dismiss='modal' style='display: block' ) Save
                button#updateForm.btn.btn-default.btn-primary.btn-update(type='button' data-dismiss='modal' style='display: none') Update
//------- formData---->

script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.all.min.js")
script.
    $(document).ready(function() {
        $('.btn-save').show();
    const assetData =!{assetData};
    var selectedId = ""
    var selectedIndex = ""

    $('#myTable').DataTable({
        "dom": '<"row"<"col-sm-6"l><"col-sm-6 d-flex justify-content-end"f>>rt<"row"<"col-sm-6 mt-3"i><"col-sm-6 d-flex justify-content-end custom-pagination mt-3"p>>',
        "initComplete": function(settings, json) {
            var searchInput = $('.dataTables_filter input[type="search"]');
            searchInput.addClass('form-control form-control-sm');
            searchInput.attr('placeholder', 'Search...');
        },
        "pagingType": "full_numbers",
        "data": assetData,
        "columns": [
        { "title": "Asset Name", "data": "assetName" },
        { "title": "Branch", "data": "branchName" },
        { "title": "Asset Category", "data": "assetTypeName" },
        { "title": "Purchase Date", "data": "purchaseDate","render": function(data, type, row) {
            return moment(row.purchaseDate).format("DD-MM-YYYY");
            } },
        { "title": "Make", "data": "make" },
        { "title": "Modal", "data": "modal" },
        { "title": "In-Stock", "data": "isInStock","render": function(data, type, row) {
        if (data) {
            return `<span class="badge badge-success">In Stock</span>`;
        } else {
            return `<span class="badge badge-warning">Out of Stock</span>`;
        }
        } },
        {
            "title": "Actions",
            "data": null,
            "render": function(data, type, row, meta) {
                return `
                    <button class="btn btn-sm btn-primary editBtn" data-index='${meta.row}' data-value='${JSON.stringify(row)}'><i class="fas fa-pen p-1"></i></button>
                    <button class="btn btn-sm btn-danger deleteBtn" data-index='${meta.row}' data-value='${row.assetId}'><i class="fas fa-trash p-1"></i></button>
                `.trim();
            }
        }
        ]
    });
    });

        //- Edit Data Store 
            $(document).on('click', '.editBtn', function() {
            var data = $(this).data('value');
            selectedIndex = $(this).data('index');
            selectedId = data.assetId
            console.log(moment(data.purchaseDate).format("MM/DD/YYYY"))
            document.getElementById('assetName').value = data.assetName
            document.getElementById('catOption').value = data.assetTypeId
            document.getElementById('branchOption').value = data.branchId
            document.getElementById('makeName').value = data.make
            document.getElementById('modalName').value = data.modal
            document.getElementById('purchaseDate').value = moment(data.purchaseDate).format("YYYY-MM-DD")
            document.getElementById('purchaseValue').value = data.purchaseValue
            document.getElementById('isInStock').checked = data.isInStock


                $('#addEmployeeModal').modal('show');
                $('.btn-save').hide();
                $('.btn-update').show();
                $('#addEmployeeModal .modal-title').text('Edit Asset');
            });

              //- Create Data Store 
            $(document).on('click', '.createBtn', function() {
            clearFields()
            $('#addEmployeeModal').modal('show');
            $('.btn-save').show();
            $('.btn-update').hide();
            $('#addEmployeeModal .modal-title').text('Create Asset');
            });

            //Get Category Call
            $.ajax({
                url: '/asset-category',
                method: 'GET',
                dataType: 'json',
                data: {isGet : true},
                success: function (response) {
                    let arrayData = response.data
                        $('#catOption').append($('<option>', { value: 0, text: 'Select Category' }));
                        $('#catOption2').append($('<option>', { value: 0, text: 'Select Category' }));
                        getBranch()
                $.each(arrayData, function(index, ele) {
                    $('#catOption').append($('<option>', { value: ele.assetCategoryId, text: ele.assetCategoryName }));
                    $('#catOption2').append($('<option>', { value: ele.assetCategoryId, text: ele.assetCategoryName }));
                });

                }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            })

            //Get Branch Call
            function getBranch(){
                $.ajax({
                url: '/branch',
                method: 'GET',
                dataType: 'json',
                data: {isGet : true},
                //- params: {isGet : true},
                success: function (response) {
                    let arrayData = response.data
                        $('#branchOption').append($('<option>', { value: 0, text: 'Select Branch' }));
                $.each(arrayData, function(index, ele) {
                    $('#branchOption').append($('<option>', { value: ele.branchId, text: ele.branchName }));
                });

                }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            })
            }

            //Delete
            $(document).on('click', '.deleteBtn', function() {
                var assetId = $(this).data('value');
                selectedIndex = $(this).data('index');
                Swal.fire({
                    title: "Are you sure?",
                    text: "Once deleted, you will not be able to recover this...!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, keep it",
                }).then((result)=>{
                    if (result.isConfirmed) {
                    $.ajax({
                        url: "/asset/"+ assetId,
                        method: 'PUT',
                        dataType: 'json',
                        data: {
                            isActive : false,
                        },
                        success: function (response) {
                            const result = response.data
                            var table = $('#myTable').DataTable();
                            table.row(selectedIndex).remove().draw();
                        clearFields()
                            Swal.fire("Deleted Successfully...!", {
                                icon: "success",
                        });
                        }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    })
                }else {
                    Swal.fire("Your Data is safe..!", {
                        icon: "error",
                    });
                        }
                })
            });

    //- Clear From Fields
    function clearFields() {
        document.getElementById('assetName').value = ""
        document.getElementById('catOption').value = 0
        document.getElementById('branchOption').value = 0
        document.getElementById('makeName').value = ""
        document.getElementById('modalName').value = ""
        document.getElementById('purchaseDate').value = ""
        document.getElementById('purchaseValue').value = ""
        document.getElementById('isInStock').checked = false
            $('.btn-save').show();
            $('.btn-update').hide();
            selectedIndex = ""
            selectedId = ""
    }

  

    //- Create Form Action
        $('#submitForm').click(function (event) {
            event.preventDefault();
            var assetName = document.getElementById('assetName').value;
            var assetTypeId = document.getElementById('catOption').value;
            var branchId = document.getElementById('branchOption').value;
            var makeName = document.getElementById('makeName').value;
            var modalName = document.getElementById('modalName').value;
            var purchaseDate = document.getElementById('purchaseDate').value;
            var purchaseValue = document.getElementById('purchaseValue').value;
            var isInStock = document.getElementById('isInStock').checked;
                $.ajax({
                    url: "/asset",
                    method: 'POST',
                    dataType: 'json',
                    data: {
                        assetName : assetName,
                        assetTypeId : assetTypeId,
                        branchId : branchId,
                        make : makeName,
                        modal : modalName,
                        purchaseValue : purchaseValue,
                        isInStock : isInStock || false,
                        purchaseDate : moment(purchaseDate).format("YYYY-MM-DD"),
                    },
                    success: function (response) {
                        const result = response.data
                            var table = $('#myTable').DataTable();
                        table.row.add({
                            "assetId": result[0].assetId,
                            "assetName": result[0].assetName,
                            "branchId": result[0].branchId,
                            "assetTypeId": result[0].assetTypeId,
                            "branchName": result[0].branchName,
                            "assetTypeName": result[0].assetTypeName,
                            "make": result[0].make,
                            "modal": result[0].modal,
                            "isInStock": result[0].isInStock,
                            "purchaseDate": result[0].purchaseDate,
                    }).draw();

                    clearFields()
                    }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert(errorThrown);
                    }
            })
        })

    //- Update Form Action
        $('#updateForm').click(function (event) {
            event.preventDefault();
            var assetName = document.getElementById('assetName').value;
            var assetTypeId = document.getElementById('catOption').value;
            var branchId = document.getElementById('branchOption').value;
            var makeName = document.getElementById('makeName').value;
            var modalName = document.getElementById('modalName').value;
            var purchaseDate = document.getElementById('purchaseDate').value;
            var purchaseValue = document.getElementById('purchaseValue').value;
            var isInStock = document.getElementById('isInStock').checked;

                $.ajax({
                    url: "/asset/"+ selectedId,
                    method: 'PUT',
                    dataType: 'json',
                    data: {
                        assetName : assetName,
                        assetTypeId : assetTypeId,
                        branchId : branchId,
                        make : makeName,
                        modal : modalName,
                        purchaseValue : purchaseValue,
                        isInStock : isInStock || false,
                        purchaseDate : purchaseDate
                    },
                    success: function (response) {
                        const result = response.data
                            var table = $('#myTable').DataTable();
                            var rowData = table.row(selectedIndex).data();

                            rowData.assetName = result[0].assetName;
                            rowData.branchName = result[0].branchName;
                            rowData.assetTypeName = result[0].assetTypeName;
                            rowData.make = result[0].make;
                            rowData.modal = result[0].modal;
                            rowData.isInStock = result[0].isInStock;
                            rowData.purchaseDate = result[0].purchaseDate;

                            table.row(selectedIndex).data(rowData).draw();
                            clearFields()
                        }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                            })
                        })




